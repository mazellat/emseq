/**
  ******************************************************************************
  * @file           : sequencer.c
  * @author			: Thomas Mazella - Electronic Milkshake
  * @date			: Sept 2021
  * @brief          : Handles sequences
  ******************************************************************************
  */

/* Includes ------------------------------------------------------------------*/
#include "sequencer.h"

/* Defines ------------------------------------------------------------*/
#define MAX_SEQ_LEN 16

/* Typedef -----------------------------------------------------------*/
typedef struct
{
	playMode pmPlayMode = PLAYMODE_FORWARD;
	uint8_t u8SeqLen = MAX_SEQ_LEN;
	uint8_t u8SeqRat = 1;
	uint16_t u16SeqRoot = 0;
	uint8_t u8SeqPos = 0;
	uint8_t u8SeqRatCnt = 0;
	uint8_t u8SeqDivider = 1;
	uint16_t u16SeqCV[MAX_SEQ_LEN];
	uint8_t u8SeqGate[MAX_SEQ_LEN];
} Sequence;

/* Macros -------------------------------------------------------------*/

/* Variables ---------------------------------------------------------*/
Sequence Sequence1;
Sequence Sequence2;

/* Private function -----------------------------------------------*/

/**
 * @fn static void Sequencer_vInitSequencer(void)
 * @brief Inits sequencer and both sequences
 */
PRIVATE static void Sequencer_vInitSequence(Sequence sSeq)
{

}

/* Public function -----------------------------------------------*/

/**
 * @fn static void Sequencer_vInitSequencer(void)
 * @brief Inits sequencer and both sequences
 */
PUBLIC static void Sequencer_vInitSequencer(void)
{

}

/**
 * @fn static void Sequencer_vTickSequencer(void)
 * @brief This function is called for every tick (gate input of internal clock)
 */
PUBLIC static void Sequencer_vTickSequencer(void)
{

}

